spring.application.name=clases-service

spring.datasource.url=jdbc:h2:mem:usuariosdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.h2.console.enabled=true
server.port=8083

spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/gimnasio
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
keycloak.auth-server-url=http://localhost:8080/auth
keycloak.realm=gimnasio
keycloak.resource=clases-service
keycloak.public-client=false
keycloak.credentials.secret=iWmzyvBtry9VXZwSD1vQLidLSwAwphXl
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.security.oauth2.server.resource=TRACE

### Feign Logs para verificar
logging.level.feign=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.feign.Logger=DEBUG
logging.level.org.springframework.web.client.RestTemplate=DEBUG

### RabbitMQ
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

### Kafka config
spring.kafka.bootstrap-servers=localhost:29092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.streams.application-id=entrenador-app
spring.kafka.streams.state-dir=/tmp/kafka-streams
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.value-deserializer=com.gym.icesi.config.CustomJsonDeserializer
#logging.level.org.springframework.kafka=DEBUG
#logging.level.org.apache.kafka=DEBUG

## Logs config
log.retention.hours=168
log.retention.bytes=1073741824
log.segment.bytes=536870912
log.cleanup.policy=delete

## override
spring.main.allow-bean-definition-overriding=true

### Eureka Client
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.application.name}:${server.port}:${random.value}